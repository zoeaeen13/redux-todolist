{"version":3,"sources":["contexts.js","constants/filters.js","components/FormItems.js","constants/style.js","components/Wrappers.js","images/check.svg","images/uncheck.svg","images/delete.svg","components/Todoitem.js","redux/selectors.js","redux/actionTypes.js","components/App.js","redux/actions.js","redux/reducers/todos.js","redux/reducers/filter.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["TypeContext","createContext","FILTERS","FormWrapper","styled","form","InputWrapper","div","SectionWrapper","section","RadioButton","typeName","filter","handleFilter","className","type","name","id","onClick","Form","value","handleInputChnage","handleAddTodo","onSubmit","placeholder","onChange","FormButtons","handleClearTodos","useContext","typeList","data-toggle","map","index","Wrapper","TodosWrapper","TodoWrapper","props","isDone","ImageWrapper","TodoItem","todo","handleToggleTodo","handlgeEditTodo","handleDeleteTodo","alt","src","imgCheck","imgUncheck","content","readOnly","imgDelete","getFilter","store","filterReducer","filteredTodos","todoReducer","todos","ADD_TODO","DELETE_TODO","TOGGLE_TODO","EDIT_TODO","ClEAR_FINISHED_TODOS","SET_FILTER","App","useSelector","dispatch","useDispatch","useState","setValue","payload","e","todoId","newContent","target","Provider","preventDefault","newFilter","setFilter","initState","combineReducers","state","action","Number","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74e8b392.chunk.js","sourcesContent":["import { createContext } from \"react\";\nexport const TypeContext = createContext(null);\n","export const FILTERS = {\n  ALL: \"All\",\n  COMPLETED: \"Completed\",\n  INCOMPLETE: \"Incomplete\",\n};\n","import styled from \"styled-components\";\nimport { MEDIA_QUERY_MD } from \"../constants/style\";\nimport PropTypes from \"prop-types\";\nimport { TypeContext } from \"../contexts\";\nimport { useContext } from \"react\";\nimport { FILTERS } from \"../constants/filters\";\n\nconst FormWrapper = styled.form`\n  box-sizing: border-box;\n  border-radius: 1.5px;\n  padding: 10px 0 20px 0;\n  width: 100%;\n  background: #5eaaa8;\n  text-align: center;\n\n  h1 {\n    margin: 10px;\n    font-size: 2rem;\n    color: white;\n  }\n`;\n\nconst InputWrapper = styled.div`\n  margin: 0 auto;\n  width: 90%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  button {\n    margin: 0 10px;\n  }\n\n  input {\n    box-sizing: border-box;\n    border: none;\n    border-radius: 3px;\n    padding: 5px;\n    width: 70%;\n    background: #a3d2ca;\n\n    &:focus {\n      outline: none;\n    }\n  }\n`;\n\nconst SectionWrapper = styled.section`\n  display: flex;\n  justify-content: space-between;\n  padding: 20px;\n  background: white;\n\n  ${MEDIA_QUERY_MD} {\n    flex-wrap: wrap;\n    justify-content: center;\n\n    button {\n      margin: 10px 0;\n    }\n\n    div {\n      margin: 0 10px;\n    }\n  }\n`;\n\nfunction RadioButton({ typeName, filter, handleFilter }) {\n  const handleClick = () => {\n    handleFilter(typeName);\n  };\n  return (\n    <label\n      className={`btn btn-secondary ${filter === typeName ? \"active\" : \"\"}`}\n    >\n      <input type=\"radio\" name=\"options\" id={typeName} onClick={handleClick} />\n      {typeName}\n    </label>\n  );\n}\n\nRadioButton.propTypes = {\n  typeName: PropTypes.string,\n  filter: PropTypes.string,\n  handleFilter: PropTypes.func,\n};\n\nexport function Form({ value, handleInputChnage, handleAddTodo }) {\n  return (\n    <FormWrapper onSubmit={handleAddTodo}>\n      <h1>TODOs</h1>\n      <InputWrapper>\n        <input\n          type=\"text\"\n          placeholder=\"Let's do something!\"\n          onChange={handleInputChnage}\n          value={value}\n        />\n        <button className=\"btn btn-light\">Add</button>\n      </InputWrapper>\n    </FormWrapper>\n  );\n}\n\nForm.propTypes = {\n  value: PropTypes.string,\n  handleInputChnage: PropTypes.func,\n  handleAddTodo: PropTypes.func,\n};\n\nexport function FormButtons({ handleClearTodos, handleFilter }) {\n  const { filter } = useContext(TypeContext);\n  const typeList = [FILTERS.ALL, FILTERS.COMPLETED, FILTERS.INCOMPLETE];\n\n  return (\n    <SectionWrapper>\n      <button className=\"btn btn-danger\" onClick={handleClearTodos}>\n        Clear\n      </button>\n      <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n        {typeList.map((type, index) => (\n          <RadioButton\n            key={index}\n            typeName={type}\n            filter={filter}\n            handleFilter={handleFilter}\n          />\n        ))}\n      </div>\n    </SectionWrapper>\n  );\n}\n\nFormButtons.propTypes = {\n  handleClearTodos: PropTypes.func,\n  handleFilter: PropTypes.func,\n};\n","export const MEDIA_QUERY_MD = \"@media (max-width: 576px)\";\nexport const MEDIA_QUERY_LG = \"@media (min-width: 768px)\";\n","import styled from \"styled-components\";\nimport { MEDIA_QUERY_LG } from \"../constants/style\";\n\nexport const Wrapper = styled.div`\n  margin: 10vh auto;\n  width: 90vw;\n  ${MEDIA_QUERY_LG} {\n    width: 60vw;\n  }\n`;\n\nexport const TodosWrapper = styled.section`\n  background: white;\n  box-shadow: 4px 4px 25px #f0f0f0;\n`;\n","export default __webpack_public_path__ + \"static/media/check.30036e3a.svg\";","export default __webpack_public_path__ + \"static/media/uncheck.50bf432c.svg\";","export default __webpack_public_path__ + \"static/media/delete.7f39c7af.svg\";","import styled from \"styled-components\";\nimport imgCheck from \"../images/check.svg\";\nimport imgUncheck from \"../images/uncheck.svg\";\nimport imgDelete from \"../images/delete.svg\";\nimport PropTypes from \"prop-types\";\n\nconst TodoWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  border: 1px solid transparent;\n\n  &:hover {\n    box-shadow: 0px 2px 10px #eeeeee;\n  }\n\n  input {\n    width: 80%;\n    border: none;\n    border-bottom: 1px solid transparent;\n    ${(props) =>\n      props.isDone &&\n      `\n    color: gray;\n    text-decoration: line-through;  \n  `}\n\n    &:focus {\n      outline: none;\n      border-color: #eeeeee;\n    }\n  }\n`;\n\nconst ImageWrapper = styled.div`\n  box-sizing: border-box;\n  padding: 8px;\n  width: 40px;\n  height: 40px;\n  cursor: pointer;\n\n  img {\n    width: 90%;\n    height: 90%;\n    object-fit: cover;\n  }\n`;\n\nexport function TodoItem({\n  todo,\n  handleToggleTodo,\n  handlgeEditTodo,\n  handleDeleteTodo,\n}) {\n  const handleToggleClick = () => {\n    handleToggleTodo(todo.id);\n  };\n\n  const handleDeleteClick = () => {\n    handleDeleteTodo(todo.id);\n  };\n\n  return (\n    <TodoWrapper isDone={todo.isDone}>\n      <ImageWrapper>\n        <img\n          alt=\"\"\n          src={todo.isDone ? imgCheck : imgUncheck}\n          onClick={handleToggleClick}\n        />\n      </ImageWrapper>\n      <input\n        type=\"text\"\n        id={todo.id}\n        value={todo.content}\n        readOnly={todo.isDone}\n        onChange={handlgeEditTodo}\n      />\n      <ImageWrapper>\n        <img alt=\"\" src={imgDelete} onClick={handleDeleteClick} />\n      </ImageWrapper>\n    </TodoWrapper>\n  );\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.object,\n  handleToggleTodo: PropTypes.func,\n  handlgeEditTodo: PropTypes.func,\n  handleDeleteTodo: PropTypes.func,\n};\n","import { FILTERS } from \"../constants/filters\";\n\nexport const getFilter = (store) => {\n  return store.filterReducer;\n};\n\nexport const filteredTodos = (store) => {\n  switch (store.filterReducer) {\n    case FILTERS.COMPLETED:\n      return store.todoReducer.todos.filter((todo) => todo.isDone === true);\n    case FILTERS.INCOMPLETE:\n      return store.todoReducer.todos.filter((todo) => todo.isDone === false);\n    default:\n      return store.todoReducer.todos;\n  }\n};\n","export const ADD_TODO = \"add_todo\";\nexport const DELETE_TODO = \"delete_todo\";\nexport const TOGGLE_TODO = \"toggle_todo\";\nexport const EDIT_TODO = \"edit_todo\";\nexport const ClEAR_FINISHED_TODOS = \"clear_todos\";\nexport const SET_FILTER = \"set_filter\";\n","import { Form, FormButtons } from \"./FormItems\";\nimport { Wrapper, TodosWrapper } from \"./Wrappers\";\nimport { TodoItem } from \"./Todoitem\";\nimport { useState, Fragment } from \"react\";\nimport { TypeContext } from \"../contexts\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFilter, filteredTodos } from \"../redux/selectors\";\nimport {\n  addTodo,\n  deleteTodo,\n  toggleTodo,\n  editTodo,\n  clearFinishedTodos,\n  setFilter,\n} from \"../redux/actions\";\n\nfunction App() {\n  const todos = useSelector(filteredTodos);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(\"\");\n\n  // handle input change\n  function handleInputChnage(e) {\n    setValue(e.target.value);\n  }\n\n  // add todo\n  function handleAddTodo(e) {\n    e.preventDefault();\n    if (value !== \"\") {\n      dispatch(addTodo(value, false));\n      setValue(\"\");\n    }\n  }\n\n  // delete todo\n  function handleDeleteTodo(id) {\n    dispatch(deleteTodo(id));\n  }\n\n  // toggle todo\n  function handleToggleTodo(id) {\n    dispatch(toggleTodo(id));\n  }\n\n  // edit todo\n  function handlgeEditTodo(e) {\n    dispatch(editTodo(e.target.id, e.target.value));\n  }\n\n  // clear finished todos\n  function handleClearTodos() {\n    dispatch(clearFinishedTodos());\n  }\n\n  // change filter\n  function handleFilter(filter) {\n    dispatch(setFilter(filter));\n  }\n\n  return (\n    <TypeContext.Provider value={{ filter }}>\n      <Fragment>\n        <Wrapper>\n          <Form\n            value={value}\n            handleInputChnage={handleInputChnage}\n            handleAddTodo={handleAddTodo}\n          />\n          <FormButtons\n            handleFilter={handleFilter}\n            handleClearTodos={handleClearTodos}\n          />\n          <TodosWrapper>\n            {todos.map((todo) => {\n              return (\n                <TodoItem\n                  key={todo.id}\n                  todo={todo}\n                  handlgeEditTodo={handlgeEditTodo}\n                  handleToggleTodo={handleToggleTodo}\n                  handleDeleteTodo={handleDeleteTodo}\n                />\n              );\n            })}\n          </TodosWrapper>\n        </Wrapper>\n      </Fragment>\n    </TypeContext.Provider>\n  );\n}\n\nexport default App;\n","// action creator\nimport {\n  ADD_TODO,\n  DELETE_TODO,\n  TOGGLE_TODO,\n  EDIT_TODO,\n  ClEAR_FINISHED_TODOS,\n  SET_FILTER,\n} from \"./actionTypes\";\n\nexport function addTodo(content, isDone) {\n  return {\n    type: ADD_TODO,\n    payload: {\n      content,\n      isDone,\n    },\n  };\n}\n\nexport function deleteTodo(todoId) {\n  return {\n    type: DELETE_TODO,\n    payload: {\n      id: todoId,\n    },\n  };\n}\n\nexport function toggleTodo(todoId) {\n  return {\n    type: TOGGLE_TODO,\n    payload: {\n      id: todoId,\n    },\n  };\n}\n\nexport function editTodo(todoId, newContent) {\n  return {\n    type: EDIT_TODO,\n    payload: {\n      id: todoId,\n      newContent: newContent,\n    },\n  };\n}\n\nexport function clearFinishedTodos() {\n  return {\n    type: ClEAR_FINISHED_TODOS,\n  };\n}\n\nexport function setFilter(filter) {\n  return {\n    type: SET_FILTER,\n    payload: {\n      newFilter: filter,\n    },\n  };\n}\n","import {\n  ADD_TODO,\n  DELETE_TODO,\n  TOGGLE_TODO,\n  EDIT_TODO,\n  ClEAR_FINISHED_TODOS,\n} from \"../actionTypes\";\n\nlet todoId = 1;\nconst initState = {\n  todos: [],\n};\n\nexport default function todoReducer(state = initState, action) {\n  switch (action.type) {\n    case ADD_TODO:\n      return {\n        todos: [\n          ...state.todos,\n          {\n            id: todoId++,\n            content: action.payload.content,\n            isDone: action.payload.isDone,\n          },\n        ],\n      };\n    case DELETE_TODO:\n      return {\n        todos: state.todos.filter((todo) => todo.id !== action.payload.id),\n      };\n    case TOGGLE_TODO:\n      return {\n        todos: state.todos.map((todo) => {\n          if (todo.id !== action.payload.id) return todo;\n          return {\n            ...todo,\n            isDone: !todo.isDone,\n          };\n        }),\n      };\n    case EDIT_TODO:\n      return {\n        todos: state.todos.map((todo) => {\n          if (todo.id !== Number(action.payload.id)) return todo;\n          return {\n            ...todo,\n            content: action.payload.newContent,\n          };\n        }),\n      };\n    case ClEAR_FINISHED_TODOS:\n      return {\n        todos: state.todos.filter((todo) => !todo.isDone),\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_FILTER } from \"../actionTypes\";\nimport { FILTERS } from \"../../constants/filters\";\n\nconst initState = FILTERS.ALL;\n\nexport default function filterReducer(state = initState, action) {\n  switch (action.type) {\n    case SET_FILTER: {\n      return action.payload.newFilter;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { combineReducers } from \"redux\";\nimport todoReducer from \"./todos\";\nimport filterReducer from \"./filter\";\n\nexport default combineReducers({ filterReducer, todoReducer });\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}